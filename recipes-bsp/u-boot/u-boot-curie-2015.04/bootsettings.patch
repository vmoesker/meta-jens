diff --git a/include/configs/mx6curie.h b/include/configs/mx6curie.h
index 6af4188..23f7a95 100644
--- a/include/configs/mx6curie.h
+++ b/include/configs/mx6curie.h
@@ -16,8 +16,7 @@
 
 #define CONFIG_MACH_TYPE	3980
 #define CONFIG_MXC_UART_BASE	UART1_BASE
-#define CONFIG_CONSOLE_DEV		"ttymxc0"
-#define CONFIG_MMCROOT			"/dev/mmcblk3p2"  /* SDHC4 */
+#define CONFIG_CONSOLE_DEV	"ttymxc0"
 
 #include "mx6curie_common.h"
 
@@ -25,6 +24,7 @@
 #define CONFIG_CMD_USB
 #define CONFIG_USB_EHCI
 #define CONFIG_USB_EHCI_MX6
+#define CONFIG_USB_OHCI
 #define CONFIG_USB_STORAGE
 #define CONFIG_EHCI_HCD_INIT_AFTER_RESET
 #define CONFIG_USB_HOST_ETHER
@@ -34,8 +34,10 @@
 #define CONFIG_USB_MAX_CONTROLLER_COUNT 2 /* Enabled USB controller number */
 
 #define CONFIG_SYS_FSL_USDHC_NUM	2
-#define CONFIG_SYS_MMC_ENV_DEV		1	/* SDHC4 */
-#define CONFIG_SYS_MMC_ENV_PART                0       /* user partition */
+#define CONFIG_SYS_EMMC_ENV_DEV		1 /* SDHC4 */
+#define CONFIG_SYS_SDCARD_ENV_DEV	0
+#define CONFIG_SYS_MMC_ENV_DEV		CONFIG_SYS_EMMC_ENV_DEV
+#define CONFIG_SYS_MMC_ENV_PART		0	/* user partition */
 
 #ifdef CONFIG_SYS_USE_SPINOR
 #define CONFIG_SF_DEFAULT_CS   (0|(IMX_GPIO_NR(4, 9)<<8))
diff --git a/include/configs/mx6curie_common.h b/include/configs/mx6curie_common.h
index 8b1c751..6093687 100644
--- a/include/configs/mx6curie_common.h
+++ b/include/configs/mx6curie_common.h
@@ -107,6 +107,11 @@
 #define CONFIG_MFG_NAND_PARTITION ""
 #endif
 
+#define CONFIG_EMMC_DEV_SET "emmcdev=" __stringify(CONFIG_SYS_EMMC_ENV_DEV) "\0" \
+			    "sdcarddev=" __stringify(CONFIG_SYS_SDCARD_ENV_DEV) "\0" \
+			    "mmcpart=" __stringify(CONFIG_SYS_MMC_IMG_LOAD_PART) "\0"
+
+
 #define CONFIG_MFG_ENV_SETTINGS \
 	"mfgtool_args=setenv bootargs console=" CONFIG_CONSOLE_DEV ",115200 " \
 		"rdinit=/linuxrc " \
@@ -157,94 +162,43 @@
 
 #else
 #define CONFIG_EXTRA_ENV_SETTINGS \
-	CONFIG_MFG_ENV_SETTINGS \
-	"script=boot.scr\0" \
-	"image=zImage\0" \
-	"fdt_file=" CONFIG_DEFAULT_FDT_FILE "\0" \
-	"fdt_addr=0x18000000\0" \
-	"boot_fdt=try\0" \
+	"script=bootscript\0" \
+	"scriptaddr=0x00100000\0" \
 	"ip_dyn=yes\0" \
 	"console=" CONFIG_CONSOLE_DEV "\0" \
-	"fdt_high=0xffffffff\0"	  \
-	"initrd_high=0xffffffff\0" \
-	"mmcdev="__stringify(CONFIG_SYS_MMC_ENV_DEV)"\0" \
-	"mmcpart=" __stringify(CONFIG_SYS_MMC_IMG_LOAD_PART) "\0" \
-	"mmcroot=" CONFIG_MMCROOT " rootwait rw\0" \
-	"mmcautodetect=yes\0" \
-	"update_sd_firmware=" \
-		"if test ${ip_dyn} = yes; then " \
-			"setenv get_cmd dhcp; " \
-		"else " \
-			"setenv get_cmd tftp; " \
-		"fi; " \
-		"if mmc dev ${mmcdev}; then "	\
-			"if ${get_cmd} ${update_sd_firmware_filename}; then " \
-				"setexpr fw_sz ${filesize} / 0x200; " \
-				"setexpr fw_sz ${fw_sz} + 1; "	\
-				"mmc write ${loadaddr} 0x2 ${fw_sz}; " \
-			"fi; "	\
-		"fi\0" \
+	"baudrate=115200\0" \
+	"bootargs_base=console=${console},${baudrate} oops=panic panic=5 ${smp} rootwait consoleblank=0\0" \
+	CONFIG_EMMC_DEV_SET \
 	"smp=" CONFIG_SYS_NOSMP "\0"\
-	"mmcargs=setenv bootargs console=${console},${baudrate} ${smp} " \
-		"root=${mmcroot}\0" \
-	"loadbootscript=" \
-		"fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};\0" \
-	"bootscript=echo Running bootscript from mmc ...; " \
-		"source\0" \
-	"loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}\0" \
-	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}\0" \
-	"mmcboot=echo Booting from mmc ...; " \
-		"run mmcargs; " \
-		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"if run loadfdt; then " \
-				"bootz ${loadaddr} - ${fdt_addr}; " \
-			"else " \
-				"if test ${boot_fdt} = try; then " \
-					"bootz; " \
-				"else " \
-					"echo WARN: Cannot load the DT; " \
-				"fi; " \
-			"fi; " \
-		"else " \
-			"bootz; " \
-		"fi;\0" \
-	"netargs=setenv bootargs console=${console},${baudrate} ${smp} " \
-		"root=/dev/nfs " \
-		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
+	"sdloadbootscript=" \
+		"ext2load mmc ${sdcarddev}:${mmcpart} ${scriptaddr} ${script};\0" \
+	"mmcloadbootscript=" \
+		"ext2load mmc ${emmcdev}:${mmcpart} ${scriptaddr} ${script};\0" \
+	"usbloadbootscript=" \
+		"ext2load usb 0:${mmcpart} ${scriptaddr} ${script};\0" \
+	"bootscript=echo Running bootscript ...; " \
+		"source ${scriptaddr}\0" \
 	"netboot=echo Booting from net ...; " \
-		"run netargs; " \
 		"if test ${ip_dyn} = yes; then " \
-			"setenv get_cmd dhcp; " \
-		"else " \
-			"setenv get_cmd tftp; " \
+			"dhcp $scriptaddr; " \
 		"fi; " \
-		"${get_cmd} ${image}; " \
-		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"if ${get_cmd} ${fdt_addr} ${fdt_file}; then " \
-				"bootz ${loadaddr} - ${fdt_addr}; " \
-			"else " \
-				"if test ${boot_fdt} = try; then " \
-					"bootz; " \
-				"else " \
-					"echo WARN: Cannot load the DT; " \
-				"fi; " \
-			"fi; " \
-		"else " \
-			"bootz; " \
-		"fi;\0"
+		"run bootscript;\0"
 
 #define CONFIG_BOOTCOMMAND \
-	"mmc dev ${mmcdev};" \
-	"if mmc rescan; then " \
-		"if run loadbootscript; then " \
-		"run bootscript; " \
-		"else " \
-			"if run loadimage; then " \
-				"run mmcboot; " \
-			"else run netboot; " \
-			"fi; " \
-		"fi; " \
-	"else run netboot; fi"
+	"mmc dev ${emmcdev};" \
+	"usb start;" \
+	"mmc rescan; " \
+	"if run sdloadbootscript; then " \
+	    "run bootscript; " \
+	"else if run usbloadbootscript; then " \
+	    "run bootscript; " \
+	"else if run mmcloadbootscript; then " \
+	    "run bootscript; " \
+	"else " \
+	    "run netboot; "\
+	"fi;" \
+	"fi;" \
+	"fi"
 #endif
 
 #define CONFIG_ARP_TIMEOUT     200UL
@@ -397,6 +351,7 @@
 #define CONFIG_SYS_I2C_MXC
 #define CONFIG_SYS_I2C_SPEED		100000
 
+#if 0
 /* Framebuffer */
 #define CONFIG_VIDEO
 #define CONFIG_VIDEO_IPUV3
@@ -416,6 +371,7 @@
 #define CONFIG_IPUV3_CLK 264000000
 #endif
 #define CONFIG_IMX_HDMI
+#endif
 
 #if defined(CONFIG_ANDROID_SUPPORT)
 #include "mx6sabreandroid_common.h"
